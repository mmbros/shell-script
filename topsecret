#!/bin/bash
#
# utility to crypt/decrypt a folder to a file.
#

# gpg options
#GPG_OPT='--batch --passphrase "PASSPHRASE"'
GPG_OPT=

CRYPTED_FILE=
PLAIN_FOLDER=
OP_CRYPT=0
OP_DECRYPT=0


# Usage info
show_help() {
	cat << EOF
${0##*/}: utility to crypt/decrypt a folder to a file.

Usage: ${0##*/} -c|--crypt <source plain dir> <dest crypted file>
       ${0##*/} -d|--decrypt <source crypted file> <dest plain dir>
       ${0##*/} -h|--help

In crypt mode, save a folder content in a new file crypted with
symmetric cipher using a passphrase.
In decrypt mode, restore the plain content to a new folder.
Exit with error in case destination file or folder already exists.
EOF
}


# Tar the folder content and crypt the tar file.
crypt_dir() {
	if [ -e "$CRYPTED_FILE" ]
	then
		# error if crypted file already exists
		echo "Destination file \"$CRYPTED_FILE\" already exists!" 1>&2
		exit 1
	elif [ ! -d "$PLAIN_FOLDER" ]
	then
		# error if source folder not exists
		echo "Source folder \"$PLAIN_FOLDER\" not found!" 1>&2
		exit 1
	else
		# compress and crypt source folder
		tar -czpf - -C "$PLAIN_FOLDER" . | gpg $GPG_OPT --symmetric -o "$CRYPTED_FILE"
	fi
}

# Decrypt the archive and untar it to the destination folder
decrypt_file() {

	if [ ! -e "$CRYPTED_FILE" ]
	then
		# error if crypted file not exists
		echo "Source file \"$CRYPTED_FILE\" not found!" 1>&2
		exit 1
	elif [ -d "$PLAIN_FOLDER" ]
	then
		# error if destination folder already exists
		echo "Destination folder \"$PLAIN_FOLDER\" already exists!" 1>&2
		exit 1
	else
		# decrypt and decompress source file
		mkdir "$PLAIN_FOLDER"
		gpg $GPG_OPT -d $CRYPTED_FILE | tar -xzpf - -C "$PLAIN_FOLDER"
	fi
}

# -----------------------------------------------------------------------------
# Parse command line arguments. Check for errors.

OPTS=`getopt -o cdh --long help,crypt,decrypt -n 'parse-options' -- "$@"`

if [ $? != 0 ] ; then echo "Failed parsing options." >&2 ; exit 1 ; fi


#echo "$OPTS"

eval set -- "$OPTS"


while true; do
case "$1" in
	-h | --help )    show_help; exit 0 ;;
	-c | --crypt ) OP_CRYPT=1; shift ;;
	-d | --decrypt ) OP_DECRYPT=1; shift ;;
	-- ) shift; break ;;
	* ) break ;;
esac
done

# check OPERATION: crypt or decrypt
OP=$(( OP_CRYPT + OP_DECRYPT ))

if (( OP == 2 )) ;
then
	echo "Error: crypt or decrypt must be given, not both" >&2 ; exit 1
elif (( OP == 0 )) ;
then
	echo "Error: crypt or decrypt must be given" >&2 ; exit 1
fi

if (( OP_CRYPT == 1 )) ;
then
	PLAIN_FOLDER=$1
	CRYPTED_FILE=$2
else
	CRYPTED_FILE=$1
	PLAIN_FOLDER=$2
fi


# check FILE
if [[ -z "$CRYPTED_FILE"  ]] ;
then
	echo "Error: FILENAME must be given" >&2 ; exit 1
fi


# check FOLDER
if [[ -z "$PLAIN_FOLDER" ]] ;
then
	echo "Error: FOLDER must be given" >&2 ; exit 1
fi


# -----------------------------------------------------------------------------

if (( OP_CRYPT == 1 )) ;
then
	crypt_dir
else
	decrypt_file
fi
